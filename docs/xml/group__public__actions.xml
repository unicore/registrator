<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="group__public__actions" kind="group">
    <compoundname>public_actions</compoundname>
    <title>ACTIONS</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__public__actions_1gae1702caf1911dc181b0b9907a00ccf38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reg::regaccount</definition>
        <argsstring>(eosio::name payer, eosio::name referer, eosio::name newaccount, eosio::public_key public_key, eosio::asset cpu, eosio::asset net, uint64_t ram_bytes, bool is_guest, bool set_referer)</argsstring>
        <name>regaccount</name>
        <qualifiedname>reg::regaccount</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>referer</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>newaccount</declname>
        </param>
        <param>
          <type>eosio::public_key</type>
          <declname>public_key</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>cpu</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>net</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ram_bytes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_guest</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>set_referer</declname>
        </param>
        <briefdescription>
<para>Метод регистрации нового аккаунта </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>AUTH: payer</title><para></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">payer</parametername>
</parameternamelist>
<parameterdescription>
<para>имя аккаунта регистратора </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">referer</parametername>
</parameternamelist>
<parameterdescription>
<para>имя аккаунта реферера нового аккаунта (не обязательно, если set_referer = false) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">newaccount</parametername>
</parameternamelist>
<parameterdescription>
<para>имя нового аккаунта </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">public_key</parametername>
</parameternamelist>
<parameterdescription>
<para>публичный ключ нового аккаунта </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cpu</parametername>
</parameternamelist>
<parameterdescription>
<para>количество системного токена в CPU </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">net</parametername>
</parameternamelist>
<parameterdescription>
<para>количество системного токена в NET </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ram_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>количество оперативной памяти нового аккаунта </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_guest</parametername>
</parameternamelist>
<parameterdescription>
<para>флаг регистрации в качестве гостя </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set_referer</parametername>
</parameternamelist>
<parameterdescription>
<para>флаг автоматической установки реферера в контракт партнёров</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Метод производит регистрацию нового аккаунта в системе. Если is_guest = true, то аккаунт регистрируется в качестве гостя, что означает, что контракт регистратора устанавливает права владельца нового аккаунта на себя. Если is_guest = false, то регистратор создаёт новый аккаунт с передачей прав владельца на него. Флаг set_referer используется для автоматической установки партнёра в реферальную структуру, что не обязательно. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="40" column="11" bodyfile="registrator.cpp" bodystart="26" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1ga7f2e2bf0ec8ebd5df001fc90cf671035" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reg::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <qualifiedname>reg::update</qualifiedname>
        <briefdescription>
<para>Метод отзыва аккаунтов гостей </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>AUTH: любой аккаунт</title><para></para>
</simplesect>
Метод производит поиск аккаунтов гостей с истекшим сроком давности и заменяет им активные права доступа. Отозванные аккаунты помещаются в таблицу reserved для дальнейшего использования или полного удаления. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="35" column="11" bodyfile="registrator.cpp" bodystart="134" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1ga4a1b47b5accdc3bd69209aabc7674c00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reg::payforguest</definition>
        <argsstring>(eosio::name payer, eosio::name username, eosio::asset quantity)</argsstring>
        <name>payforguest</name>
        <qualifiedname>reg::payforguest</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <briefdescription>
<para>Метод оплаты аккаунта гостя </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>AUTH: payer</title><para></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">payer</parametername>
</parameternamelist>
<parameterdescription>
<para><linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">username</parametername>
</parameternamelist>
<parameterdescription>
<para>The username </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>The quantity</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Метод оплаты вызывается гостем после пополнения своего баланса как регистратора. Оплата списывается с баланса регистратора, а права владельца заменяются на публичный ключ, указанный в объекте гостя. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="38" column="11" bodyfile="registrator.cpp" bodystart="223" bodyend="259"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Методы действий контракта </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
