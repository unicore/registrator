<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classreg" kind="class" language="C++" prot="public">
    <compoundname>reg</compoundname>
    <basecompoundref prot="public" virt="non-virtual">eosio::contract</basecompoundref>
    <includes refid="registrator_8hpp" local="no">registrator.hpp</includes>
    <innerclass refid="structreg_1_1authority" prot="public">reg::authority</innerclass>
    <innerclass refid="structreg_1_1balance" prot="public">reg::balance</innerclass>
    <innerclass refid="structreg_1_1guests" prot="public">reg::guests</innerclass>
    <innerclass refid="structreg_1_1key__weight" prot="public">reg::key_weight</innerclass>
    <innerclass refid="structreg_1_1permission__level__weight" prot="public">reg::permission_level_weight</innerclass>
    <innerclass refid="structreg_1_1reserved" prot="public">reg::reserved</innerclass>
    <innerclass refid="structreg_1_1wait__weight" prot="public">reg::wait_weight</innerclass>
      <sectiondef kind="user-defined">
      <memberdef kind="variable" id="group__public__consts_1ga079bf296e1b637fe52db07cbeaa93686" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name reg::_me</definition>
        <argsstring></argsstring>
        <name>_me</name>
        <qualifiedname>reg::_me</qualifiedname>
        <initializer>= &quot;registrator&quot;_n</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>собственное имя аккаунта контракта </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="50" column="34" bodyfile="registrator.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__public__consts_1ga8ae671f374ee8b21eb6b9484ede22ed2" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name reg::_partners</definition>
        <argsstring></argsstring>
        <name>_partners</name>
        <qualifiedname>reg::_partners</qualifiedname>
        <initializer>= &quot;part&quot;_n</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>имя аккаунта контракта хранилища партнёров </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="51" column="34" bodyfile="registrator.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__public__consts_1ga4c906f9ce2df193e45670754922f813b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name reg::_core</definition>
        <argsstring></argsstring>
        <name>_core</name>
        <qualifiedname>reg::_core</qualifiedname>
        <initializer>= &quot;unicore&quot;_n</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>имя аккаунта цифровой экономики ядра </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="52" column="34" bodyfile="registrator.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__public__consts_1ga32d128681fd3f5812731d15c17e603a1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name reg::_system_account</definition>
        <argsstring></argsstring>
        <name>_system_account</name>
        <qualifiedname>reg::_system_account</qualifiedname>
        <initializer>= &quot;eosio&quot;_n</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>имя аккаунта системного контракта </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="53" column="34" bodyfile="registrator.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__public__consts_1ga3d61df9a68cc685e9d89e3753522a97a" prot="public" static="yes" mutable="no">
        <type>const uint64_t</type>
        <definition>const uint64_t reg::_GUEST_EXPIRATION</definition>
        <argsstring></argsstring>
        <name>_GUEST_EXPIRATION</name>
        <qualifiedname>reg::_GUEST_EXPIRATION</qualifiedname>
        <initializer>= 1209600</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>продолжительность гостевого периода, после которого, аккаунт может быть отозван </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="55" column="27" bodyfile="registrator.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__public__consts_1ga93ffe32d6d1291d4f905c74b075b946f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::symbol</type>
        <definition>constexpr eosio::symbol reg::_SYMBOL</definition>
        <argsstring></argsstring>
        <name>_SYMBOL</name>
        <qualifiedname>reg::_SYMBOL</qualifiedname>
        <initializer>= eosio::symbol(eosio::symbol_code(&quot;FLOWER&quot;),4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>системный токен </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="57" column="36" bodyfile="registrator.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__public__consts_1gac7708b21cb5233709b7f0e40125bb98d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::symbol</type>
        <definition>constexpr eosio::symbol reg::_ramcore_symbol</definition>
        <argsstring></argsstring>
        <name>_ramcore_symbol</name>
        <qualifiedname>reg::_ramcore_symbol</qualifiedname>
        <initializer>= eosio::symbol(eosio::symbol_code(&quot;RAMCORE&quot;), 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>идентификационный токен рынка оперативной памяти </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="58" column="36" bodyfile="registrator.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__public__consts_1gaab90524ce8cbf4f2f96e8ae8e67dfebb" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::symbol</type>
        <definition>constexpr eosio::symbol reg::RAM_symbol</definition>
        <argsstring></argsstring>
        <name>RAM_symbol</name>
        <qualifiedname>reg::RAM_symbol</qualifiedname>
        <initializer>{&quot;RAM&quot;, 0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>токен рынка оперативной памяти </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="60" column="36" bodyfile="registrator.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__public__consts_1gaab09e14c907c2978690f26f3190b60a3" prot="public" static="yes" mutable="no">
        <type>const uint64_t</type>
        <definition>const uint64_t reg::_MIN_AMOUNT</definition>
        <argsstring></argsstring>
        <name>_MIN_AMOUNT</name>
        <qualifiedname>reg::_MIN_AMOUNT</qualifiedname>
        <initializer>= 10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>комиссия, взымаемая регистратором за пользование гостевым аккаунтом </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="62" column="27" bodyfile="registrator.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__public__consts_1ga32606b670a77381cf1e8afc898094999" prot="public" static="yes" mutable="no">
        <type>const uint64_t</type>
        <definition>const uint64_t reg::_BASKET</definition>
        <argsstring></argsstring>
        <name>_BASKET</name>
        <qualifiedname>reg::_BASKET</qualifiedname>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>количество гостевых аккаунтов, которые могут быть отозваны за один вызов действия </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="64" column="27" bodyfile="registrator.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classreg_1a78c9e11cfd35f11fad4cbef8e5c0e7dc" prot="public" static="no">
        <type>eosio::multi_index&lt;&quot;guests&quot;_n, <ref refid="structreg_1_1guests" kindref="compound">guests</ref>, eosio::indexed_by&lt; &quot;byexpr&quot;_n, eosio::const_mem_fun&lt; <ref refid="structreg_1_1guests" kindref="compound">guests</ref>, uint64_t, &amp;<ref refid="structreg_1_1guests_1abf1b27ca3657ff967f918a3ce5aa619b" kindref="member">guests::byexpr</ref> &gt; &gt;, eosio::indexed_by&lt; &quot;byreg&quot;_n, eosio::const_mem_fun&lt; <ref refid="structreg_1_1guests" kindref="compound">guests</ref>, uint64_t, &amp;<ref refid="structreg_1_1guests_1af5e43b1679dd3753f6cc668de93af083" kindref="member">guests::byreg</ref> &gt; &gt; &gt;</type>
        <definition>typedef eosio::multi_index&lt;&quot;guests&quot;_n, guests, eosio::indexed_by&lt; &quot;byexpr&quot;_n, eosio::const_mem_fun&lt;guests, uint64_t, &amp;guests::byexpr&gt; &gt;, eosio::indexed_by&lt; &quot;byreg&quot;_n, eosio::const_mem_fun&lt;guests, uint64_t, &amp;guests::byreg&gt; &gt; &gt; reg::guests_index</definition>
        <argsstring></argsstring>
        <name>guests_index</name>
        <qualifiedname>reg::guests_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="141" column="2" bodyfile="registrator.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classreg_1aed4c80e477ec1689912179d3dea60464" prot="public" static="no">
        <type>eosio::multi_index&lt;&quot;reserved&quot;_n, <ref refid="structreg_1_1reserved" kindref="compound">reserved</ref> &gt;</type>
        <definition>typedef eosio::multi_index&lt;&quot;reserved&quot;_n, reserved&gt; reg::reserved_index</definition>
        <argsstring></argsstring>
        <name>reserved_index</name>
        <qualifiedname>reg::reserved_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="162" column="32" bodyfile="registrator.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classreg_1a6ffbdf73b541edf55bec4c1c021252a6" prot="public" static="no">
        <type>eosio::multi_index&lt;&quot;balance&quot;_n, <ref refid="structreg_1_1balance" kindref="compound">balance</ref> &gt;</type>
        <definition>typedef eosio::multi_index&lt;&quot;balance&quot;_n, balance&gt; reg::balances_index</definition>
        <argsstring></argsstring>
        <name>balances_index</name>
        <qualifiedname>reg::balances_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="182" column="32" bodyfile="registrator.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classreg_1ad4f16aa634768f0cdcc0f648d8a8eb9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>reg::reg</definition>
        <argsstring>(eosio::name receiver, eosio::name code, eosio::datastream&lt; const char * &gt; ds)</argsstring>
        <name>reg</name>
        <qualifiedname>reg::reg</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>eosio::datastream&lt; const char * &gt;</type>
          <declname>ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="31" column="5" bodyfile="registrator.hpp" bodystart="31" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1ga7f2e2bf0ec8ebd5df001fc90cf671035" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reg::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <qualifiedname>reg::update</qualifiedname>
        <briefdescription>
<para>Метод отзыва аккаунтов гостей </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>AUTH: любой аккаунт</title><para></para>
</simplesect>
Метод производит поиск аккаунтов гостей с истекшим сроком давности и заменяет им активные права доступа. Отозванные аккаунты помещаются в таблицу reserved для дальнейшего использования или полного удаления. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="35" column="11" bodyfile="registrator.cpp" bodystart="134" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1ga4a1b47b5accdc3bd69209aabc7674c00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reg::payforguest</definition>
        <argsstring>(eosio::name payer, eosio::name username, eosio::asset quantity)</argsstring>
        <name>payforguest</name>
        <qualifiedname>reg::payforguest</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <briefdescription>
<para>Метод оплаты аккаунта гостя </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>AUTH: payer</title><para></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">payer</parametername>
</parameternamelist>
<parameterdescription>
<para><linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">username</parametername>
</parameternamelist>
<parameterdescription>
<para>The username </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>The quantity</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Метод оплаты вызывается гостем после пополнения своего баланса как регистратора. Оплата списывается с баланса регистратора, а права владельца заменяются на публичный ключ, указанный в объекте гостя. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="38" column="11" bodyfile="registrator.cpp" bodystart="223" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1gae1702caf1911dc181b0b9907a00ccf38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reg::regaccount</definition>
        <argsstring>(eosio::name payer, eosio::name referer, eosio::name newaccount, eosio::public_key public_key, eosio::asset cpu, eosio::asset net, uint64_t ram_bytes, bool is_guest, bool set_referer)</argsstring>
        <name>regaccount</name>
        <qualifiedname>reg::regaccount</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>referer</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>newaccount</declname>
        </param>
        <param>
          <type>eosio::public_key</type>
          <declname>public_key</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>cpu</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>net</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ram_bytes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_guest</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>set_referer</declname>
        </param>
        <briefdescription>
<para>Метод регистрации нового аккаунта </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>AUTH: payer</title><para></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">payer</parametername>
</parameternamelist>
<parameterdescription>
<para>имя аккаунта регистратора </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">referer</parametername>
</parameternamelist>
<parameterdescription>
<para>имя аккаунта реферера нового аккаунта (не обязательно, если set_referer = false) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">newaccount</parametername>
</parameternamelist>
<parameterdescription>
<para>имя нового аккаунта </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">public_key</parametername>
</parameternamelist>
<parameterdescription>
<para>публичный ключ нового аккаунта </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cpu</parametername>
</parameternamelist>
<parameterdescription>
<para>количество системного токена в CPU </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">net</parametername>
</parameternamelist>
<parameterdescription>
<para>количество системного токена в NET </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ram_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>количество оперативной памяти нового аккаунта </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_guest</parametername>
</parameternamelist>
<parameterdescription>
<para>флаг регистрации в качестве гостя </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set_referer</parametername>
</parameternamelist>
<parameterdescription>
<para>флаг автоматической установки реферера в контракт партнёров</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Метод производит регистрацию нового аккаунта в системе. Если is_guest = true, то аккаунт регистрируется в качестве гостя, что означает, что контракт регистратора устанавливает права владельца нового аккаунта на себя. Если is_guest = false, то регистратор создаёт новый аккаунт с передачей прав владельца на него. Флаг set_referer используется для автоматической установки партнёра в реферальную структуру, что не обязательно. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="40" column="11" bodyfile="registrator.cpp" bodystart="26" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classreg_1aff38aca5c5c33fe94b1cd3bd185fa2fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reg::apply</definition>
        <argsstring>(uint64_t receiver, uint64_t code, uint64_t action)</argsstring>
        <name>apply</name>
        <qualifiedname>reg::apply</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>code</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="42" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classreg_1a57153abba6626af0df819085d5fa4ce3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>eosio::asset</type>
        <definition>eosio::asset reg::determine_ram_price</definition>
        <argsstring>(uint32_t bytes)</argsstring>
        <name>determine_ram_price</name>
        <qualifiedname>reg::determine_ram_price</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="185" column="18" bodyfile="registrator.hpp" bodystart="185" bodyend="191"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classreg_1a952b297262c727578ebb5ca0f1dad99c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reg::add_balance</definition>
        <argsstring>(eosio::name payer, eosio::name username, eosio::asset quantity, uint64_t code)</argsstring>
        <name>add_balance</name>
        <qualifiedname>reg::add_balance</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="36" column="17" bodyfile="registrator.cpp" bodystart="189" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classreg_1ab31e637f328df5e468f56c890dbfebfe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint128_t</type>
        <definition>static uint128_t reg::combine_ids</definition>
        <argsstring>(const uint64_t &amp;x, const uint64_t &amp;y)</argsstring>
        <name>combine_ids</name>
        <qualifiedname>reg::combine_ids</qualifiedname>
        <param>
          <type>const uint64_t &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const uint64_t &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="registrator.hpp" line="72" column="22" bodyfile="registrator.hpp" bodystart="72" bodyend="74"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Начните ознакомление здесь. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>eosio::contract</label>
      </node>
      <node id="1">
        <label>reg</label>
        <link refid="classreg"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>eosio::contract</label>
      </node>
      <node id="1">
        <label>reg</label>
        <link refid="classreg"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="registrator.hpp" line="28" column="1" bodyfile="registrator.hpp" bodystart="28" bodyend="194"/>
    <listofallmembers>
      <member refid="group__public__consts_1ga32606b670a77381cf1e8afc898094999" prot="public" virt="non-virtual"><scope>reg</scope><name>_BASKET</name></member>
      <member refid="group__public__consts_1ga4c906f9ce2df193e45670754922f813b" prot="public" virt="non-virtual"><scope>reg</scope><name>_core</name></member>
      <member refid="group__public__consts_1ga3d61df9a68cc685e9d89e3753522a97a" prot="public" virt="non-virtual"><scope>reg</scope><name>_GUEST_EXPIRATION</name></member>
      <member refid="group__public__consts_1ga079bf296e1b637fe52db07cbeaa93686" prot="public" virt="non-virtual"><scope>reg</scope><name>_me</name></member>
      <member refid="group__public__consts_1gaab09e14c907c2978690f26f3190b60a3" prot="public" virt="non-virtual"><scope>reg</scope><name>_MIN_AMOUNT</name></member>
      <member refid="group__public__consts_1ga8ae671f374ee8b21eb6b9484ede22ed2" prot="public" virt="non-virtual"><scope>reg</scope><name>_partners</name></member>
      <member refid="group__public__consts_1gac7708b21cb5233709b7f0e40125bb98d" prot="public" virt="non-virtual"><scope>reg</scope><name>_ramcore_symbol</name></member>
      <member refid="group__public__consts_1ga93ffe32d6d1291d4f905c74b075b946f" prot="public" virt="non-virtual"><scope>reg</scope><name>_SYMBOL</name></member>
      <member refid="group__public__consts_1ga32d128681fd3f5812731d15c17e603a1" prot="public" virt="non-virtual"><scope>reg</scope><name>_system_account</name></member>
      <member refid="classreg_1a952b297262c727578ebb5ca0f1dad99c" prot="public" virt="non-virtual"><scope>reg</scope><name>add_balance</name></member>
      <member refid="classreg_1aff38aca5c5c33fe94b1cd3bd185fa2fb" prot="public" virt="non-virtual"><scope>reg</scope><name>apply</name></member>
      <member refid="classreg_1a6ffbdf73b541edf55bec4c1c021252a6" prot="public" virt="non-virtual"><scope>reg</scope><name>balances_index</name></member>
      <member refid="classreg_1ab31e637f328df5e468f56c890dbfebfe" prot="public" virt="non-virtual"><scope>reg</scope><name>combine_ids</name></member>
      <member refid="classreg_1a57153abba6626af0df819085d5fa4ce3" prot="public" virt="non-virtual"><scope>reg</scope><name>determine_ram_price</name></member>
      <member refid="classreg_1a78c9e11cfd35f11fad4cbef8e5c0e7dc" prot="public" virt="non-virtual"><scope>reg</scope><name>guests_index</name></member>
      <member refid="group__public__actions_1ga4a1b47b5accdc3bd69209aabc7674c00" prot="public" virt="non-virtual"><scope>reg</scope><name>payforguest</name></member>
      <member refid="group__public__consts_1gaab90524ce8cbf4f2f96e8ae8e67dfebb" prot="public" virt="non-virtual"><scope>reg</scope><name>RAM_symbol</name></member>
      <member refid="classreg_1ad4f16aa634768f0cdcc0f648d8a8eb9f" prot="public" virt="non-virtual"><scope>reg</scope><name>reg</name></member>
      <member refid="group__public__actions_1gae1702caf1911dc181b0b9907a00ccf38" prot="public" virt="non-virtual"><scope>reg</scope><name>regaccount</name></member>
      <member refid="classreg_1aed4c80e477ec1689912179d3dea60464" prot="public" virt="non-virtual"><scope>reg</scope><name>reserved_index</name></member>
      <member refid="group__public__actions_1ga7f2e2bf0ec8ebd5df001fc90cf671035" prot="public" virt="non-virtual"><scope>reg</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
